{"version":3,"sources":["assets/Policy.pdf","pages/studentside/components/pdf.js","pages/studentside/components/form.js","components/file-upload.jsx","pages/studentside/components/query.js","pages/studentside/Support/TnPGuidelines.js"],"names":["module","exports","AllPages","isLoading","setIsLoading","useState","React","createElement","style","position","width","height","top","left","backgroundColor","display","alignItems","justifyContent","fontSize","color","src","border","onLoad","handleIframeLoad","title","AllPages2","paddingTop","FileUpload","_ref","onFileSelect","selectedFile","setSelectedFile","className","type","onChange","event","file","target","files","required","accept","name","AllPages3","nocs","setNocs","isDialogOpen","setIsDialogOpen","isMobile","setIsMobile","window","innerWidth","newNoc","setNewNoc","company","address","city","state","pinCode","start","end","source","proofFile","setProofFile","useEffect","handleResize","addEventListener","removeEventListener","async","_response$data","response","securedAxiosInstance","get","data","applications","error","console","fetchNocs","handleInputChange","persist","value","log","prev","_objectSpread","handleAddNoc","formData","FormData","startDate","endDate","key","alert","append","JSON","stringify","post","headers","status","id","length","text","tabIndex","role","onClick","aria-label","map","htmlFor","charAt","toUpperCase","slice","concat","item","allowed","rejected","statusColor","noc_link","href","rel","textDecoration","background","borderColor","Fragment","header","textAlign","index","Container","Row","Col","xs","Card","marginTop","Body","Tabs","defaultActiveKey","Tab","eventKey"],"mappings":"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","file":"static/js/9.696006d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Policy.94764af0.pdf\";","import React, { useState } from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport pdf from \"../../../assets/Policy.pdf\";\n\nexport default function AllPages() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleIframeLoad = () => {\n    setIsLoading(false);\n  }; \n\n  return (\n    // <div>\n    // <Document\n    // //   file={'https://drive.google.com/uc?export=view&id=1VBbaH7wCPq6jfZkCZokSapRVVllHOpIZ'}\n    // file={pdf}\n    // //   options={{ workerSrc: \"/pdf.worker.js\" }}\n    //   onLoadSuccess={onDocumentLoadSuccess}\n    // >\n    //   {/* <Page pageNumber={pageNumber}/> */}\n    //   {Array.from(new Array(numPages), (el, index) => (\n    //     <Page key={`page_${index + 1}`} pageNumber={index + 1} />\n    //   ))}\n    // </Document>\n    // {/* <p>\n    //     Page {pageNumber} of {numPages}\n    // </p> */}\n    // </div>\n    <div style={{ position: \"relative\", width: \"100%\", height: \"1000px\" }}>\n      {isLoading && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"#f3f3f3\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            fontSize: \"24px\",\n            color: \"#555\",\n          }}\n        >\n          Loading PDF...\n        </div>\n      )}\n      <iframe\n        src=\"https://tnpnsut-files.s3.ap-south-1.amazonaws.com/Placement_Policy_2024_25_final_b6588b530d.pdf\"\n        width=\"100%\"\n        height=\"1000px\"\n        style={{ display: isLoading ? \"none\" : \"block\", border: \"none\" }}\n        onLoad={handleIframeLoad}\n        title=\"T&P NSUT Guidelines\"\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function AllPages2() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleIframeLoad = () => {\n    setIsLoading(false);\n  };\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"1200px\", paddingTop: \"30px\" }}>\n      {isLoading && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"#f3f3f3\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            fontSize: \"24px\",\n            color: \"#555\",\n          }}\n        >\n          Loading Form...  \n        </div>\n      )}\n      <iframe\n        src=\"https://tnpnsut-files.s3.ap-south-1.amazonaws.com/Undertaking_2_8c30ea71d8.pdf\" \n        width=\"100%\"\n        height=\"1000px\"\n        style={{ display: isLoading ? \"none\" : \"block\", border: \"none\" }}\n        onLoad={handleIframeLoad}\n        title=\"T&P NSUT Undertaking From\" \n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nconst FileUpload = ({ onFileSelect }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    onFileSelect(file);\n  };\n\n  return (\n    <div className=\"form-group row mb-3\">\n      <label className=\"col-12 col-md-4 col-form-label\">\n        Proof of Internship\n      </label>\n      <div className=\"col-12 col-md-8\">\n        <input\n          type=\"file\"\n          className=\"form-control\"\n          onChange={handleFileChange}\n          required\n          accept=\".pdf,.doc,.docx\"\n        />\n        {selectedFile && (\n          <div className=\"mt-2 text-muted\">\n            Selected file: {selectedFile.name}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState, useEffect } from \"react\";\nimport { securedAxiosInstance } from \"../../../axiosConfig\";\nimport FileUpload from \"../../../components/file-upload\";\n\nconst AllPages3 = () => {\n  const [nocs, setNocs] = useState([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [newNoc, setNewNoc] = useState({\n    company: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    pinCode: \"\",\n    start: \"\",\n    end: \"\",\n    source: \"\",\n  });\n\n  const [proofFile, setProofFile] = useState(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    const fetchNocs = async () => {\n      try {\n        const response = await securedAxiosInstance.get(\"/nocs/student\");\n        setNocs([...response.data?.applications]);\n      } catch (error) {\n        console.error(\"Error fetching NOCs:\", error);\n      }\n    };\n    fetchNocs();\n  }, []);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    const { name, value } = event.target;\n    console.log(name, value);\n    setNewNoc((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleAddNoc = async () => {\n    try {\n      const formData = new FormData();\n      console.log(newNoc);\n      newNoc.start = newNoc.startDate;\n      newNoc.end = newNoc.endDate;\n\n      // check if all data is present\n      for (const key in newNoc) {\n        if (!newNoc[key]) {\n          alert(\"Please fill all the fields\");\n          return;\n        }\n      }\n\n      if (!proofFile) {\n        alert(\"Please upload a proof file\");\n        return;\n      }\n\n      formData.append(\"data\", JSON.stringify(newNoc));\n      formData.append(\"files.noc\", proofFile);\n      const response = await securedAxiosInstance.post(\n        \"/nocs/apply\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      if (response.status) {\n        setNocs((prev) => [...prev, { ...newNoc, id: nocs.length + 1 }]);\n        setNewNoc({\n          company: \"\",\n          address: \"\",\n          city: \"\",\n          state: \"\",\n          pinCode: \"\",\n          start: \"\",\n          end: \"\",\n        });\n        setIsDialogOpen(false);\n      } else {\n        console.error(\"Error adding new NOC:\", await response.text());\n      }\n    } catch (error) {\n      console.error(\"Error adding new NOC:\", error);\n    }\n  };\n\n  const renderMobileTable = () => (\n    <div className=\"mobile-table\">\n      {nocs.map((item) => {\n        const status =\n          item.allowed === true\n            ? \"Accepted\"\n            : item.rejected === true\n            ? \"Rejected\"\n            : \"Pending...\";\n\n        // Define status colors\n        const statusColor =\n          status === \"Accepted\"\n            ? \"green\"\n            : status === \"Rejected\"\n            ? \"red\"\n            : \"gray\";\n\n        return (\n          <div key={item.id} className=\"card mb-3\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{item.company}</h5>\n              <p className=\"card-text\">\n                <strong>Address:</strong> {item.address}\n                <br />\n                <strong>City:</strong> {item.city}\n                <br />\n                <strong>State:</strong> {item.state}\n                <br />\n                <strong>Pincode:</strong> {item.pinCode}\n                <br />\n                <strong>Start Date:</strong> {item.start}\n                <br />\n                <strong>End Date:</strong> {item.end}\n                <br />\n                <br />\n                <strong>Status:</strong>{\" \"}\n                <span style={{ color: statusColor }}>{status}</span>\n              </p>\n              {/* Add Download Button */}\n              {item.noc_link ? (\n                <a\n                  href={item.noc_link}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  style={{ textDecoration: \"none\" }}\n                >\n                  <button\n                    className=\"btn btn-primary btn-block\"\n                    style={{\n                      width: \"100%\",\n                      display: \"block\",\n                      background: \"linear-gradient(to right, #fb7b4a, #ee3344)\",\n                      borderColor: \"#fb7b4a\",\n                    }}\n                  >\n                    Download NOC\n                  </button>\n                </a>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n\n  const renderDesktopTable = () => (\n    <div className=\"table-responsive\">\n      <table className=\"table table-bordered table-hover\">\n        <thead className=\"table-light\">\n          <tr>\n            {[\n              \"Company\",\n              \"Address\",\n              \"City\",\n              \"State\",\n              \"Pincode\",\n              \"Start Date\",\n              \"End Date\",\n              \"Status\",\n              \"Download\",\n            ].map((header) => (\n              <th key={header} className=\"text-start\">\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {nocs.map((item) => {\n            const status =\n              item.allowed === true\n                ? \"Accepted\"\n                : item.rejected === true\n                ? \"Rejected\"\n                : \"Pending...\";\n\n            return (\n              <tr key={item.id}>\n                {[\n                  item.company,\n                  item.address,\n                  item.city,\n                  item.state,\n                  item.pinCode,\n                  item.start,\n                  item.end,\n                  // Add conditional coloring for the status column\n                  <span\n                    style={{\n                      color:\n                        status === \"Accepted\"\n                          ? \"green\"\n                          : status === \"Rejected\"\n                          ? \"red\"\n                          : \"gray\",\n                    }}\n                  >\n                    {status}\n                  </span>,\n                  // Conditional rendering of the download icon\n                  item.noc_link ? (\n                    <div style={{ width: \"100%\", textAlign: \"center\" }}>\n                      <a\n                        href={item.noc_link}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        title=\"Download NOC\"\n                        style={{\n                          display: \"inline-block\",\n                          color: \"blue\",\n                          textDecoration: \"none\",\n                        }}\n                      >\n                        <i\n                          className=\"bi bi-download\"\n                          style={{ fontSize: \"1rem\" }}\n                        ></i>\n                      </a>\n                    </div>\n                  ) : (\n                    <div style={{ textAlign: \"center\" }}></div>\n                  ),\n                ].map((value, index) => (\n                  <td key={index}>{value}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n\n  const renderModal = () => (\n    <div className=\"modal d-block\" tabIndex=\"-1\" role=\"dialog\">\n      <div\n        className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\"\n        role=\"document\"\n      >\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Request NOC</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              onClick={() => setIsDialogOpen(false)}\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div className=\"modal-body\">\n            {[\n              \"company\",\n              \"address\",\n              \"city\",\n              \"state\",\n              \"pinCode\",\n              \"startDate\",\n              \"endDate\",\n            ].map((name) => (\n              <div key={name} className=\"form-group row mb-3\">\n                <label\n                  htmlFor={name}\n                  className=\"col-12 col-md-4 col-form-label\"\n                >\n                  {name.charAt(0).toUpperCase() + name.slice(1)}\n                </label>\n                <div className=\"col-12 col-md-8\">\n                  <input\n                    type={\n                      name === \"startDate\" || name === \"endDate\"\n                        ? \"date\"\n                        : \"text\"\n                    }\n                    className=\"form-control\"\n                    id={name}\n                    required\n                    name={name}\n                    value={newNoc[name]}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n            ))}\n            <div className=\"form-group row mb-3\">\n              <label\n                htmlFor=\"source\"\n                className=\"col-12 col-md-4 col-form-label\"\n              >\n                Source\n              </label>\n              <div className=\"col-12 col-md-8\">\n                <select\n                  className=\"form-control\"\n                  id=\"source\"\n                  name=\"source\"\n                  required\n                  value={newNoc.source}\n                  onChange={handleInputChange}\n                >\n                  <option value=\"\">Select Source</option>\n                  <option value=\"On_Campus\">On Campus</option>\n                  <option value=\"Off_Campus\">Off Campus</option>\n                </select>\n              </div>\n            </div>\n            <FileUpload onFileSelect={(file) => setProofFile(file)} />\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-secondary\"\n              onClick={() => setIsDialogOpen(false)}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleAddNoc}\n            >\n              Request NOC\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"container-fluid p-3\">\n      {isDialogOpen && renderModal()}\n\n      <div className=\"text-end mb-3\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={() => setIsDialogOpen(true)}\n        >\n          Request NOC\n        </button>\n      </div>\n\n      <div\n        className={`${isDialogOpen ? \"opacity-50 pointer-events-none\" : \"\"}`}\n      >\n        {isMobile ? renderMobileTable() : renderDesktopTable()}\n      </div>\n    </div>\n  );\n};\n\nexport default AllPages3;\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  Container,\n  Tabs,\n  Tab,\n} from \"@themesberg/react-bootstrap\";\nimport AllPages from \"../components/pdf\";\nimport AllPages2 from \"../components/form\";\nimport AllPages3 from \"../components/query\";\nimport \"./TnPGuidelines.css\";\n\nexport default () => {\n  // const handleSelect = (eventKey) => {\n  //   if (eventKey === \"allPages2\") {\n  //     window.location.href =\n  //       \"https://docs.google.com/forms/d/e/1FAIpQLSdLALUwh2p4isafOlcMiRM7tE1XWtq8r3zN7-c5atkfkprAnw/viewform\";\n  //   }\n  // };\n\n  return (\n    <Container className=\"px-0\">\n      <Row>\n        <Col xs={12} className=\"p-3\">\n          <Card>\n            <h1 style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n              Forms and Documents\n            </h1>\n            <Card.Body>\n              <Tabs\n                defaultActiveKey=\"allPages\"\n                id=\"tnp-guidelines-tabs\"\n                className=\"mb-3\"\n                // onSelect={handleSelect}\n              >\n                <Tab\n                  eventKey=\"allPages\"\n                  title={\n                    <div className=\"custom-tab-container\">\n                      <div className=\"custom-tab\">TnP Guidelines</div>\n                    </div>\n                  }\n                >\n                  <div className=\"custom-tab-content\">\n                    <AllPages />\n                  </div>\n                </Tab>\n                {/* <Tab\n                  eventKey=\"allPages2\"\n                  title={\n                    <div className=\"custom-tab-container\">\n                      <div className=\"custom-tab\">NOC Form</div>\n                    </div>\n                  }\n                >\n                </Tab> */}\n                <Tab\n                  eventKey=\"allPages2\"\n                  title={\n                    <div className=\"custom-tab-container\">\n                      <div className=\"custom-tab\">NOC Form</div>\n                    </div>\n                  }\n                >\n                  <div className=\"custom-tab-content\">\n                    <AllPages3 />\n                  </div>\n                </Tab>\n                <Tab\n                  eventKey=\"allPages3\"\n                  title={\n                    <div className=\"custom-tab-container\">\n                      <div className=\"custom-tab\">Undertaking</div>\n                    </div>\n                  }\n                >\n                  <div className=\"custom-tab-content\">\n                    <AllPages2 />\n                  </div>\n                </Tab>\n              </Tabs>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"],"sourceRoot":""}